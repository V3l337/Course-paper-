---
- name: Ensure /etc/apt/apt.conf.d directory exists
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d
    state: directory
    mode: '0755'

- name: Ensure APT proxy configuration file exists
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/01proxy
    state: touch 

# Настраиваем прокси для APT
- name: Set APT proxy
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/01proxy
    line: 'Acquire::http::Proxy "http://10.128.1.100:3128/";'
    state: present

- name: Обновить 
  ansible.builtin.apt:
    update_cache: true
    upgrade: full

- name: Создание группы Prometheus
  ansible.builtin.group:
    name: prometheus
    system: yes

- name: Создать пользователя Prometheus
  ansible.builtin.user:
    name: prometheus
    group: prometheus
    shell: /bin/false
    system: true
    create_home: no
  register: prometheus_user_creation

# - name: Скачать 
#   ansible.builtin.get_url:
#     url: https://github.com/prometheus/prometheus/releases/download/v2.54.1/prometheus-2.54.1.linux-amd64.tar.gz
#     dest: /tmp/prometheus-2.54.1.linux-amd64.tar.gz

- name: Скачать Prometheus через прокси
  ansible.builtin.get_url:
    url: https://github.com/prometheus/prometheus/releases/download/v2.54.1/prometheus-2.54.1.linux-amd64.tar.gz
    dest: /tmp/prometheus-2.54.1.linux-amd64.tar.gz
    validate_certs: no  # Отключите валидацию сертификатов для теста, если требуется
  environment:
    http_proxy: "http://10.128.1.100:3128"
    https_proxy: "http://10.128.1.100:3128"

- name: Создать tmp директорию для Prometheus
  ansible.builtin.file:
    path: /tmp/prometheus-2.54.1
    state: directory

- name: Извлечь 
  ansible.builtin.unarchive:
    src: /tmp/prometheus-2.54.1.linux-amd64.tar.gz
    dest: /tmp/prometheus-2.54.1
    remote_src: true

- name: Создать основную директорию для Prometheus
  ansible.builtin.file:
    path: /etc/prometheus
    state: directory
    mode: '0755'

- name: Создать директорию для хранения данных Prometheus
  ansible.builtin.file:
    path: /var/lib/prometheus
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'

- name: Копировать исполняемые файлы Prometheus и promtool
  ansible.builtin.copy:
    src: "/tmp/prometheus-2.54.1/prometheus-2.54.1.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/"
    owner: prometheus
    group: prometheus
    mode: '0755'
    remote_src: true
  loop:
    - prometheus
    - promtool

- name: Копировать консольные библиотеки и шаблоны
  ansible.builtin.copy:
    src: "/tmp/prometheus-2.54.1/prometheus-2.54.1.linux-amd64/{{ item }}"
    dest: "/etc/prometheus/"
    owner: prometheus
    group: prometheus
    mode: '0755'
    remote_src: true
  loop:
    - console_libraries
    - consoles
#    - prometheus.yml 

- name: Копировать для Prometheus.yaml динамические добавление веб хостов
  ansible.builtin.copy:
    src: prometheus.yml
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'

- name: Копировать для Prometheus
  ansible.builtin.copy:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'
    remote_src: false

- name: Перезагрузить systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Запустить и включить сервис Prometheus
  ansible.builtin.systemd:
    name: prometheus.service
    state: started
    enabled: true

- name: Проверить статус Prometheus
  ansible.builtin.command:
    cmd: systemctl status prometheus.service
  register: prometheus_status
  ignore_errors: true

- name: Показать статус Prometheus
  ansible.builtin.debug:
    var: prometheus_status.stdout_lines

